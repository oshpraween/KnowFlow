spring.application.name=skillshare-backend

# MongoDB Configuration - Replace this URI with your MongoDB connection string
spring.data.mongodb.uri=mongodb+srv://admin:pafproject123@cluster0.5c47sof.mongodb.net/

# Server Configuration - Changed port from 8080 to 8081 to avoid conflict
server.port=8081

# Logging Configuration
logging.level.org.springframework.data.mongodb.core.MongoTemplate=DEBUG
logging.level.com.university.skillshare_backend=DEBUG

# CORS Configuration
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
spring.web.cors.allowed-headers=Origin,Content-Type,Accept,Authorization,X-Requested-With
spring.web.cors.exposed-headers=Access-Control-Allow-Origin,Access-Control-Allow-Credentials
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600

# WebSocket Configuration - Add these lines
spring.websocket.origin=http://localhost:5173
spring.websocket.allow-credentials=true
spring.websocket.path=/ws

# Allow bean definition overriding
spring.main.allow-bean-definition-overriding=true

# File upload settings
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.file-size-threshold=2KB
file.upload-dir=uploads

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=204301433068-017r0ujjo1v89e9fpc27j2m5l91o3nvh.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8081/login/oauth2/code/google

